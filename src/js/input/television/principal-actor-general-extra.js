// Generated by CoffeeScript 1.4.0
(function(){var e,t,n,r=function(e,t){return function(){return e.apply(t,arguments)}};n=this;t=n.log;e=n.define;e(["jquery"],function(e){var t;t=function(){function t(t){this.index=t;this.onInputExtras=r(this.onInputExtras,this);this.onInputActors=r(this.onInputActors,this);this.html="<div>\n  On day "+this.index+', I\'ll need\n  <input type="number" name="day-'+this.index+'-num-actors" id="day-'+this.index+'-num-actors" class="actor" value="0" min="0" max="10">\n  <a href="#principal-actor" class="term open">principal actor</a>(s) and\n  <input type="number" name="day-'+this.index+'-num-extras" id="day-'+this.index+'-num-extras" class="extra" value="0" min="0" max="10">\n  <a href="#general-extra" class="term open">general extra</a>(s).\n  <div class="actors" style="display: none">\n    <input type="number" name="day-'+this.index+'-actors-wardrobe" id="day-'+this.index+'-actors-wardrobe" class="actors-wardrobe" value="0" min="0" max="0">\n    principal actor(s) will need wardrobe fittings.\n  </div>\n  <div class="extras" style="display: none">\n    <input type="number" name="day-'+this.index+'-extras-wardrobe" id="day-'+this.index+'-extras-wardrobe" class="extras-wardrobe" value="0" min="0" max="0">\n    general extra(s) will need wardrobe fittings.\n  </div>\n</div>';this.$el=e(this.html);this.el=this.$el[0];this.$el.on("input change","#day-"+this.index+"-num-actors",this.onInputActors);this.$el.on("input change","#day-"+this.index+"-num-extras",this.onInputExtras)}t.prototype.onInputActors=function(e){var t,n,r,i;n=parseInt(e.target.value,10);n>0?this.$el.find(".actors").show():this.$el.find(".actors").hide();t=this.$el.find(".actors-wardrobe");r=parseInt(t.prop("max"),10);i=parseInt(t.val(),10);t.prop("max",n);t.val(Math.max(0,i+(n-r)))};t.prototype.onInputExtras=function(e){var t,n,r,i;n=parseInt(e.target.value,10);n>0?this.$el.find(".extras").show():this.$el.find(".extras").hide();t=this.$el.find(".extras-wardrobe");r=parseInt(t.prop("max"),10);i=parseInt(t.val(),10);t.prop("max",n);t.val(Math.max(0,i+(n-r)))};return t}();return t})}).call(this);