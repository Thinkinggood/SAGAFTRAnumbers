// Generated by CoffeeScript 1.4.0
(function() {
  var define, log, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = this;

  log = root.log;

  define = root.define;

  define(['jquery', 'underscore'], function($, _) {
    var ExtraDay;
    ExtraDay = (function() {

      function ExtraDay(index) {
        this.index = index;
        this.onChange = __bind(this.onChange, this);

        this.html = "<p>\n	Extra " + this.index + " is a\n	<select name=\"extra-" + this.index + "-type\" id=\"extra-" + this.index + "-type\" class=\"chzn-select\" data-placeholder=\"please choose...\">\n		<!-- EXTRA MUST HAVE A TYPE! -->\n		<!-- <option value=\"-1\"></option> -->\n	</select>-type\n	extra, and I'll need them for\n	<input type=\"number\" name=\"extra-" + this.index + "-num-days\" id=\"extra-" + this.index + "-num-days\" class=\"num-days\" value=\"1\" min=\"1\" max=\"10\">\n	day(s).\n</p>\n";
        this.$el = $(this.html);
        this.el = this.$el[0];
        this.setupOptions();
        this.$el.on('change', '#extra-type', this.onChange);
      }

      ExtraDay.prototype.setupOptions = function() {
        var html;
        this.selectedIndex = -1;
        this.selectedItem = null;
        this.options = ['general', 'special ability', 'silent bit'];
        html = '';
        _.each(this.options, function(el, i) {
          return html += "<option value=\"" + i + "\">" + el + "</option>";
        });
        return this.$el.find('select').append(html);
      };

      ExtraDay.prototype.getSelectedItem = function() {
        return this.selectedItem;
      };

      ExtraDay.prototype.onChange = function(event) {
        this.selectedIndex = parseInt(event.target.value, 10);
        return this.selectedItem = this.selectedIndex !== -1 ? this.options[this.selectedIndex] : null;
      };

      return ExtraDay;

    })();
    return ExtraDay;
  });

}).call(this);
