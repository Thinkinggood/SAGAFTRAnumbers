// Generated by CoffeeScript 1.4.0
(function() {
  var define, log, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = this;

  log = root.log;

  define = root.define;

  define(['jquery', 'underscore', 'input/corp-edu/use-storecasting'], function($, _, UseStorecasting) {
    var Category;
    Category = (function() {

      function Category() {
        this.onChange = __bind(this.onChange, this);
        this.html = "<fieldset>\n	<span style=\"vertical-align: top;\">This Audio Only program is a (please choose one):</span>\n	<div>\n		<input type=\"radio\" name=\"category\" id=\"category-i\" value=\"0\" checked /> <label for=\"category-i\">Category I</label><br/>\n		\n		<input type=\"radio\" name=\"category\" id=\"category-ii\" value=\"1\" /> <label for=\"category-ii\">Category II</label><br/>\n		\n		<input type=\"radio\" name=\"category\" id=\"ivr-category\" value=\"2\" />\n		<label for=\"ivr-category\" style=\"display: inline-block; vertical-align: top;\">\n			Interactive Voice Recording (IVR), <br/>\n			Phone Prompt System, or <br/>\n			Phonecasting\n		</label><br/>\n\n		<input type=\"radio\" name=\"category\" id=\"storecasting\" value=\"3\" /> <label for=\"storecasting\">Storecasting</label>\n	</div>\n</fieldset>";
        this.$el = $(this.html);
        this.el = this.$el[0];
        this.setupOptions();
        this.$el.on('change', 'input', this.onChange);
      }

      Category.prototype.setupOptions = function() {
        this.selectedIndex = -1;
        this.selectedItem = null;
        return this.options = [new UseStorecasting()];
      };

      Category.prototype.getSelectedItem = function() {
        return this.selectedItem;
      };

      Category.prototype.onChange = function(event) {
        this.selectedIndex = parseInt(event.target.value, 10);
        if (this.selectedIndex !== parseInt(this.$el.find('#storecasting').val(), 10)) {
          if (this.selectedItem != null) {
            this.selectedItem.$el.detach();
          }
          this.selectedItem = null;
          return;
        }
        this.selectedItem = this.options[0];
        if (this.selectedItem != null) {
          return this.$el.parent().appendPolyfill(this.selectedItem.$el);
        }
      };

      return Category;

    })();
    return Category;
  });

}).call(this);
